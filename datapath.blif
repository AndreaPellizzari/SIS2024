.model datapath
.inputs i0 i1 i2 i3 i4 i5 i6
# (i0 e i1 -> Primo) --- (i2 e i3 -> Secondo) --- (i4 -> Stato) --- (i5 e i6 -> Manche) 
.outputs primopass1 primopass0 secondopass1 secondopass0 check
#modifica

.search uno.blif
.subckt uno o=uno

.search zero.blif
.subckt zero o=zero

# Demux "1" che prende come input primo e come selettore stato
.search demux2out2bit.blif
.subckt DEMUx1-2 a0=i0 a1=i1 s=i4 x0=0demux1 x1=1demux1 y0=2demux1 y1=3demux1

# Sommatore "1" 4 bit che somma 0000 al valore in entrata al demux in caso il demux "1" con input primo commuti l' uscita 1
.search sommatore4bit.blif
.subckt somma4bit a3=zero a2=zero a1=3demux1 a0=2demux1 b3=zero b2=zero b1=zero b0=zero cout=cout s0=0somma1 s1=1somma1 s2=2somma1 s3=3somma1

# Shifter "" che prende in input la somma tra il risultato del demux e 0000
.search shifter2bitleft.blif
.subckt shifter_left2 a0=0somma1 a1=1somma1 a2=2somma1 a3=3somma1 x3=3shift1 x2=2shift1 x1=1shift1 x0=0shift1

# Demux "2" che prende come input secondo e come selettore stato
.search demux2out2bit.blif
.subckt DEMUx1-2 a0=i2 a1=i3 s=i4 x0=0demux2 x1=1demux2 y0=2demux2 y1=3demux2

# Sommatore "2" 4 bit che prende in input il risultato dello shifter "" e il valore di secondo
.search sommatore4bit.blif
.subckt somma4bit a0=0shift1 a1=1shift1 a2=2shift1 a3=3shift1 b0=0demux2 b1=1demux2 b2=2demux2 b3=3demux2 cout=cout2 s3=3somma2 s2=2somma2 s1=1somma2 s0=0somma2

# Sommatore "2.5" 5 bit che prende in input il risultato di primo e secondo e ci aggiunge 4 binario
.search sommatore5bit.blif
.subckt somma5bit a0=0somma2 a1=1somma2 a2=2somma2 a3=3somma2 a4=zero b0=zero b1=zero b2=uno b3=zero b4=zero cout=cout25 s4=4somma25 s3=3somma25 s2=2somma25 s1=1somma25 s0=0somma25

# Mux "1" che prende in input il risultato del sommatore "2" e il risultato del valore del registro nump
.search multiplexer2ingressi5bit.blif
.subckt multiplexer2ingressi5bit a0=0somma25 a1=1somma25 a2=2somma25 a3=3somma25 a4=4somma25 b0=0reg1 b1=1reg1 b2=2reg1 b3=3reg1 b4=4reg1 s=i4 o0=0mux1 o1=1mux1 o2=2mux1 o3=3mux1 o4=4mux1

# Registro "num_p" a 5 bit
.search registro5.blif
.subckt registro5 a0=0mux1 a1=1mux1 a2=2mux1 a3=3mux1 a4=4mux1 o0=0reg1 o1=1reg1 o2=2reg1 o3=3reg1 o4=4reg1 

# Mux "2" che prende in input 4 entrate a 2 bit e manda in output un segnale a 2 bit che andr√† a sua volta in input ad un comparatore a 2 bit
.search multiplexer4ingressi2bit.blif
.subckt multiplexer4ingressi2bit x1=0reg2 x0=1reg2 a0=0demux1 a1=1demux1 b0=0demux2 b1=1demux2 c1=0demux1 c0=1demux1 d1=0demux2 d0=1demux2 o0=0mux2 o1=1mux2
 
# Mux "3" che prende in input (statico) 00 e manche 
.search multiplexer2ingressi2bit.blif
.subckt multiplexer2ingressi2bit a0=zero a1=zero b0=i5 b1=i6 s=i4 o0=0mux3 o1=1mux3

# Registro "ultimo_vincitore" a 2 bit
.search registro2.blif
.subckt registro2 a0=0mux3 a1=1mux3 o0=0reg2 o1=1reg2

# Mux "4" che prende in input 4 ingressi da 2 bit e restituisce un output che entrera in un mux da 2 ingressi da 2 bit, e prende come selettore manche
.search multiplexer4ingressi2bit.blif
.subckt multiplexer4ingressi2bit x0=i5 x1=i6 a0=0demux1 a1=1demux1 b0=0demux2 b1=1demux2 c0=zero c1=zero d0=0reg3 d1=1reg3 o0=0mux4 o1=1mux4

# Mux "5" che prende in input l' uscita commutata dal mux "4" e un input statico 00, e prende come selettore stato
.search multiplexer2ingressi2bit.blif
.subckt multiplexer2ingressi2bit a0=0mux4 a1=1mux4 b0=zero b1=zero s=i4 o0=0mux5 o1=1mux5

# Registro "ultima_mossa" a 2 bit
.search registro2.blif
.subckt registro2 a0=0mux5 a1=1mux5 o0=0reg3 o1=1reg3

# Comparatore "1" tra l' output del registro "ultima_mossa" e l' output del mux "2"
.search comparatore2bit.blif
.subckt comparatore2bit a0=0reg3 a1=1reg3 b0=0mux2 b1=1mux2 O=comp1

# Mux "6" che prende in input il valore di output del demux "1" e un input statico 00, e come selettore il valore dell' output del comparatore
.search multiplexer2ingressi2bit.blif
.subckt multiplexer2ingressi2bit a0=0demux1 a1=1demux1 b0=zero b1=zero s=comp1 o0=0mux6 o1=1mux6

# Comparatore di maggioranza che verifica se il valore del registro "i" e maggiore del valore del registro "num_p"
.search maggiore5bit.blif
.subckt 6gt a0=0reg4 a1=1reg4 a2=2reg4 a3=3reg4 a4=4reg4 b0=0reg1 b1=1reg1 b2=2reg1 b3=3reg1 b4=4reg1 agtb=max1

# Demux "3" che prende in input il valore del risultato del sommatore e un input statico 00001
.search multiplexer2ingressi5bit.blif
.subckt multiplexer2ingressi5bit a0=zero a1=zero a2=zero a3=zero a4=uno b0=0mux65 b1=1mux65 b2=2mux65 b3=3mux65 b4=4mux65 s=i4 o0=0demux3 o1=1demux3 o2=2demux3 o3=3demux3 o4=4demux3

# Registro "i" che prende in input il valore del demux "3"
.search registro5.blif
.subckt registro5 a0=0demux3 a1=1demux3 a2=2demux3 a3=3demux3 a4=4demux3 o0=0reg4 o1=1reg4 o2=2reg4 o3=3reg4 o4=4reg4

# Demux "4" che prende in input il valore del registro i
.search demux2out5bit.blif
.subckt demux2-5 a0=0reg4 a1=1reg4 a2=2reg4 a3=3reg4 a4=4reg4 x0=x0demux4 x1=x1demux4 x2=x2demux4 x3=x3demux4 x4=x4demux4 y0=y0demux4 y1=y1demux4 y2=y2demux4 y3=y3demux4 y4=y4demux4 s=comp1
# manca demux dedicato che prenda 4 bit in ingresso

# Sommatore "" somma registro contatore i
.search sommatore5bit.blif
.subckt somma5bit a0=x0demux4 a1=x1demux4 a2=x2demux4 a3=x3demux4 a4=x4demux4 b0=uno b1=zero b2=zero b3=zero b4=zero s0=0sommaM s1=1sommaM s2=2sommaM s3=3sommaM s4=4sommaM


# Mux "6.5" prende in input i non incrementata e i incrementata, in base alla mossa
.search multiplexer2ingressi5bit.blif
.subckt multiplexer2ingressi5bit a0=y0demux4 a1=y1demux4 a2=y2demux4 a3=y3demux4 a4=y4demux4 b0=0sommaM b1=1sommaM b2=2sommaM b3=3sommaM b4=4sommaM o0=0mux65 o1=1mux65 o2=2mux65 o3=3mux65 o4=4mux65 s=comp1


# Comparatore di maggioranza che verifica se il valore del registro "i" e maggiore del valore 00011
.search maggiore5bit.blif
.subckt 6gt a0=0reg4 a1=1reg4 a2=2reg4 a3=3reg4 a4=4reg4 b0=zero b1=zero b2=zero b3=uno b4=uno agtb=check

## Mux "7" che prende in input il valore del demux 
.search multiplexer2ingressi2bit.blif
.subckt multiplexer2ingressi2bit a0=0mux6 a1=1mux6 b0=zero b1=zero s=max1 o0=secondopass0 o1=secondopass1

## Mux "8" che prende in input il valore del demux "2" se commuta zero in uscita ed un input statico 00
.search multiplexer2ingressi2bit.blif
.subckt multiplexer2ingressi2bit a0=0demux2 a1=1demux2 b0=zero b1=zero s=max1 o0=primopass0 o1=primopass1

.end
